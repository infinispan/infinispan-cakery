<?xml version="1.0"  encoding="utf-8"?>

<scenario xmlns="urn:perfcake:scenario:1.0">

    <generator class="DefaultMessageGenerator" threads="${threads}">
        <run type="${runType}" value="${duration}" />
        <property name="threadQueueSize" value="${threadQueueSize}"/>
    </generator>

    <sender class="IspnCakeryODataQuerySender">
        <property name="target" value="It's not used here, pass -Duri and Custom Senders will take care."/>
        <!--<property name="expectedResponseCodes" value="200,201,202,204"/>-->
    </sender>

    <reporting>

        <!-- measuring subsets of response time results -->
        <reporter class="WindowResponseTimeReporter">
            <property name="windowSize" value="500"/>
            <destination class="ConsoleDestination">
                <period type="time" value="1000"/>
            </destination>
            <destination class="CSVDestination">
                <period type="time" value="1000"/>
                <property name="path" value="window-response-time.csv"/>
            </destination>
        </reporter>

        <reporter class="WarmUpReporter" enabled="true">
            <!-- Iteration count does not matter -->
            <property name="minimalWarmUpCount" value="100"/>
            <property name="minimalWarmUpDuration" value="${warmupDuration}"/>
            <property name="relativeThreshold" value="0.50"/> <!-- 0.005 = 0.5% -->
            <property name="absoluteThreshold" value="500"/> <!-- iterations / s -->
        </reporter>

        <reporter class="ResponseTimeReporter">
            <destination class="ConsoleDestination">
                <period type="time" value="1000"/>
            </destination>
            <destination class="CSVDestination">
                <period type="time" value="1000"/>
                <property name="path" value="response-time.csv"/>
            </destination>
        </reporter>

        <reporter class="AverageThroughputReporter">
            <destination class="ConsoleDestination">
                <period type="time" value="1000"/>
            </destination>
            <destination class="CSVDestination">
                <period type="time" value="1000"/>
                <property name="path" value="throughput.csv"/>
            </destination>
        </reporter>

        <!--<reporter class="MemoryUsageReporter">-->
            <!--<property name="agentHostname" value="${perfcake.agent.host}"/>-->
            <!--<property name="agentPort" value="8850"/>-->
            <!--<destination class="ConsoleDestination">-->
                <!--<period type="time" value="1000"/>-->
            <!--</destination>-->
            <!--<destination class="CSVDestination">-->
                <!--<period type="time" value="1000"/>-->
                <!--<property name="path" value="memusage.csv"/>-->
            <!--</destination>-->
        <!--</reporter>-->
    </reporting>
</scenario>

